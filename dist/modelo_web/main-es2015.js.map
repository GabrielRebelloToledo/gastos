{"version":3,"sources":["./src/app/core/login/login.component.ts","./src/app/core/login/login.component.html","./src/app/aluno/lista-aluno/lista-aluno.component.ts","./src/app/aluno/lista-aluno/lista-aluno.component.html","./src/app/aluno/cadastro-aluno/cadastro-aluno.component.ts","./src/app/aluno/cadastro-aluno/cadastro-aluno.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/core/auth/auth.guard.ts","./src/app/aluno/aluno.service.ts","./src/app/aluno/aluno.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/core/auth/auth.service.ts","./src/app/core/token/token.service.ts","./src/app/app.module.ts","./src/app/home/home.module.ts","./src/app/compartilhado/componentes/app-msg-erro/app-msg-erro.module.ts","./src/app/app.routing.module.ts","./src/app/core/core.module.ts","./src/app/compartilhado/componentes/app-msg-erro/app-msg-erro.component.ts","./src/app/compartilhado/componentes/app-msg-erro/app-msg-erro.component.html","./src/app/core/auth/request.interceptor.ts","./src/app/core/user/user.service.ts","./src/app/core/auth/login.guard.ts","./src/app/compartilhado/componentes/material/material.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent{\r\n    \r\n    loginForm: FormGroup; //diretiva para controle do formulário\r\n    @Input() loginError: boolean = false;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private authService: AuthService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.loginForm = this.formBuilder.group({  \r\n        login: ['', Validators.required],\r\n        password: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    login(){\r\n        const login = this.loginForm.get('login').value;\r\n        const password = this.loginForm.get('password').value;\r\n\r\n        this.authService\r\n        .authenticate(login, password)\r\n        .subscribe(\r\n            () => this.router.navigate(['home']), //informe a rota que irá abrir após o login \r\n            err => {\r\n            console.log(err);\r\n            this.loginError = true;\r\n            }\r\n        );\r\n    }\r\n}","<form #form=\"ngForm\" [formGroup]=\"loginForm\" (submit)=\"login()\" class=\"form-signin\">\r\n    <h1>Acesso ao sistema</h1>\r\n    <div class=\"form-group\">\r\n        <input formControlName=\"login\" type=\"text\" placeholder=\"Usuário\" class=\"form-control\">\r\n        <app-msg-erro mensagem=\"O usuário é obrigatório!\" *ngIf=\"loginForm.get('login').errors?.required && \r\n            (form.submitted || loginForm.get('login').touched)\">\r\n        </app-msg-erro>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <input formControlName=\"password\" type=\"password\" placeholder=\"Senha\" class=\"form-control\">\r\n        <app-msg-erro mensagem=\"A senha é obrigatória!\" *ngIf=\"loginForm.get('password').errors?.required && \r\n            (form.submitted || loginForm.get('password').touched)\">\r\n        </app-msg-erro>\r\n    </div>\r\n\r\n    <button type=\"submit\" class=\"btn btn-primary\">Entrar</button>\r\n\r\n    <app-msg-erro mensagem=\"Usuário ou senha inválidos!\" *ngIf=\"loginError\"></app-msg-erro>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Aluno } from '../aluno';\r\nimport { AlunoService } from '../aluno.service'\r\n\r\n@Component({\r\n  selector: 'app-lista-aluno',\r\n  templateUrl: './lista-aluno.component.html',\r\n  styleUrls: ['./lista-aluno.component.css']\r\n})\r\nexport class ListaAlunoComponent implements OnInit {\r\n\r\n  ListaAlunos: Aluno[] = [];\r\n  alunoForm: FormGroup\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private AlunoService: AlunoService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.pesquisaTodos();\r\n\r\n    this.alunoForm = this.formBuilder.group({\r\n      pesquisarTodos: ['']\r\n    })\r\n  }\r\n\r\n  pesquisaTodos() {\r\n    this.AlunoService.getAll().subscribe(result => { this.ListaAlunos = result })\r\n  }\r\n\r\n  editarAluno(id) {\r\n    this.router.navigate(['/home/editar/aluno', id])\r\n  }\r\n\r\n  deletarAluno(id) {\r\n\r\n    if (window.confirm('Tem certeza que deseja excluir este aluno?')) {\r\n      this.AlunoService.delete(id).subscribe(result => { this.ListaAlunos = result; })\r\n      alert('Aluno excluído.')\r\n      window.location.reload();\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"alunoForm\">\r\n    \r\n    <div class=\"container text-center\">\r\n        <table class=\"table table-hover\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Nome</th>\r\n                    <th scope=\"col\">Curso</th>\r\n                    <th scope=\"col\">Opções</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let aluno of ListaAlunos\">\r\n                    <td>{{aluno.nome}}</td>\r\n                    <td>{{aluno.curso}}</td>\r\n                    <td>\r\n                        <button class=\"btn btn-outline-primary ml-2\" (click)=\"editarAluno(aluno.id)\">Editar</button>\r\n                        <button class=\"btn btn-outline-danger ml-2\" (click)=\"deletarAluno(aluno.id)\">Excluir</button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { Location } from '@angular/common';\r\nimport { Aluno } from '../aluno';\r\n\r\nimport { AlunoService } from '../aluno.service'\r\nimport { UserService } from 'src/app/core/user/user.service';\r\n\r\n@Component({\r\n  selector: 'app-cadastro-aluno',\r\n  templateUrl: './cadastro-aluno.component.html',\r\n  styleUrls: ['./cadastro-aluno.component.css']\r\n})\r\nexport class CadastroAlunoComponent implements OnInit {\r\n\r\n  alunoForm: FormGroup;\r\n  \r\n  constructor(\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private listaUsuarios: UserService,\r\n    private AlunoService: AlunoService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n   \r\n\r\n    this.route.params\r\n      .pipe(\r\n        map((params: any) => params['id']),\r\n        switchMap(id => this.AlunoService.getById(id))\r\n      )\r\n      .subscribe(aluno => this.editarForm(aluno)\r\n      );\r\n\r\n    this.alunoForm = this.formBuilder.group({\r\n      id: [null],\r\n      id_user: ['', Validators.required],\r\n      nome: ['', Validators.required],\r\n      curso: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  editarForm(aluno: Aluno) {\r\n\r\n    this.alunoForm.patchValue(\r\n      {\r\n        id: aluno[0].id,\r\n        nome: aluno[0].nome,\r\n        curso: aluno[0].curso\r\n      }\r\n    )\r\n  }\r\n\r\n  preencheCampos(aluno: Aluno) {\r\n    this.alunoForm.patchValue(\r\n      {\r\n        nome: aluno.nome,\r\n        curso: aluno.curso\r\n      });\r\n\r\n  }\r\n\r\n  submit() {\r\n    if (this.alunoForm.value.id) {\r\n      const atualizarAluno = this.alunoForm.getRawValue() as Aluno;\r\n      this.AlunoService.update(atualizarAluno).subscribe(\r\n        success => {\r\n          alert('Aluno atualizado!')\r\n          this.alunoForm.reset()\r\n\r\n        },\r\n        error => {\r\n          alert('Erro ao atualizar.')\r\n        }\r\n      )\r\n    } else {\r\n      const novoAluno = this.alunoForm.getRawValue() as Aluno;\r\n      this.AlunoService.create(novoAluno).subscribe(\r\n        success => {\r\n          alert('Aluno salvo!')\r\n          this.alunoForm.reset()\r\n        },\r\n        error => {\r\n          alert('Erro ao salvar.')\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <form [formGroup]=\"alunoForm\" (submit)=\"submit()\">\r\n\r\n        <div class=\"row mb-5\">\r\n            <div class=\"col-lg-4 input-group\">\r\n                <div class=\"input-group-prepend\">\r\n                    <span class=\"input-group-text\">Nome</span>\r\n                </div>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"nome\" aria-label=\"Default\"\r\n                    aria-describedby=\"inputGroup-sizing-default\">\r\n            </div>\r\n\r\n            <div class=\"col-lg-4 input-group\">\r\n                <div class=\"input-group-prepend\">\r\n                    <span class=\"input-group-text\">Curso</span>\r\n                </div>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"curso\" aria-label=\"Default\"\r\n                    aria-describedby=\"inputGroup-sizing-default\">\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"form-group buttons text-center\">\r\n            <button class=\"btn btn-success\" type=\"submit\">Enviar</button>\r\n            <button class=\"btn btn-primary ml-2\" [routerLink]=\"'/home'\">Voltar</button>\r\n        </div>\r\n\r\n\r\n    </form>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    templateUrl: './home.component.html'\r\n})\r\nexport class HomeComponent{}","<router-outlet></router-outlet>\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: true,\r\n  apiUrl: 'http://localhost:3000/api/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { UserService } from '../user/user.service';\r\n\r\n@Injectable({ providedIn: 'root'})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private router: Router) {}\r\n\r\n    /* Guarda de rotas para ser utilizada nas rotas \r\n       que não devem ser acessadas se o usuário não estiver logado*/\r\n       \r\n    canActivate(\r\n        route: ActivatedRouteSnapshot, \r\n        state: RouterStateSnapshot): boolean | Observable<boolean> | Promise<boolean> {\r\n            if(!this.userService.isLogged()){\r\n                this.router.navigate(\r\n                    ['login'],\r\n                    {\r\n                        queryParams: {\r\n                            fromUrl: state.url\r\n                        }\r\n                    }\r\n                );\r\n                return false;\r\n            }\r\n            return true;\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { EMPTY, Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Aluno } from './aluno';\r\n\r\nconst API = environment.apiUrl;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlunoService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n\r\n  getAll(): Observable<Aluno[]> {\r\n    return this.http.get<Aluno[]>(`${API}aluno`);\r\n  }\r\n\r\n  create(aluno: Aluno) {\r\n    return this.http.post(`${API}aluno`, aluno).pipe(take(1));\r\n  }\r\n\r\n  getById(id) {\r\n    if (!id) return EMPTY;\r\n    return this.http.get<Aluno>(`${API}aluno/${id}`);\r\n  }\r\n\r\n  update(update) {\r\n    console.log(update)\r\n    return this.http.put(`${API}aluno/${update.id}`, update).pipe(take(1));\r\n  }\r\n\r\n  delete(id) {\r\n    return this.http.delete<Aluno[]>(`${API}aluno/${id}`);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { CadastroAlunoComponent } from './cadastro-aluno/cadastro-aluno.component';\r\nimport { ListaAlunoComponent } from './lista-aluno/lista-aluno.component';\r\nimport { AppRoutingModule } from '../app.routing.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CadastroAlunoComponent, \r\n    ListaAlunoComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    BrowserModule,\r\n    AppRoutingModule\r\n  ],\r\n  exports: [\r\n    CadastroAlunoComponent, \r\n    ListaAlunoComponent\r\n  ]\r\n})\r\nexport class AlunoModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'modelo-app';\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { UserService } from '../user/user.service';\r\n\r\nconst API = environment.apiUrl;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService{\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private userService: UserService\r\n      ) { }\r\n    \r\n      authenticate(usuario: string, senha: string){\r\n        return this.http\r\n          .post(API + 'logon', {\"usuario\":usuario, \"senha\":senha}, { observe: 'response'}) //coloque a rota de login da sua api\r\n          .pipe(tap(res => {\r\n            const authToken = res.headers.get('x-access-token');\r\n            this.userService.setToken(authToken);\r\n            console.log(`Usuário ${usuario} autenticado com o token ${authToken}`);\r\n          })\r\n        );\r\n      }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n// informe a key que será salvo no localhost\r\nconst KEY = 'authTokenmodeloapp';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class TokenService{\r\n    hasToken(){\r\n        return !!this.getToken(); //!! é utilizado para converter valores em booleanos\r\n    }\r\n\r\n    setToken(token){\r\n        window.localStorage.setItem(KEY, token);\r\n    }\r\n\r\n    getToken(){\r\n        return window.localStorage.getItem(KEY);\r\n    }\r\n\r\n    removeToken(){\r\n        return window.localStorage.removeItem(KEY);\r\n    }\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { CoreModule } from './core/core.module';\r\nimport { AppRoutingModule } from './app.routing.module';\r\nimport { HomeModule } from './home/home.module';\r\nimport { MaterialModule } from './compartilhado/componentes/material/material.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AlunoModule } from './aluno/aluno.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CoreModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    HomeModule,\r\n    AlunoModule\r\n\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { HomeComponent } from './home.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        HomeComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule\r\n    ]\r\n})\r\nexport class HomeModule{\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AppMsgErroComponent } from './app-msg-erro.component';\r\n\r\n@NgModule({\r\n    declarations: [AppMsgErroComponent],\r\n    imports: [CommonModule],\r\n    exports: [AppMsgErroComponent]\r\n})\r\nexport class AppMsgErroModule{}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './core/login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginGuard } from './core/auth/login.guard';\r\nimport { AuthGuard } from './core/auth/auth.guard';\r\nimport { CadastroAlunoComponent } from './aluno/cadastro-aluno/cadastro-aluno.component';\r\nimport { ListaAlunoComponent } from './aluno/lista-aluno/lista-aluno.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        pathMatch: 'full',\r\n        redirectTo: 'login',\r\n    },\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n        canActivate: [LoginGuard]\r\n    },\r\n    {\r\n        path: 'home',\r\n        component: HomeComponent,\r\n        canActivate: [AuthGuard],\r\n        children: [\r\n            {\r\n                path: 'cadastrar/aluno',\r\n                component: CadastroAlunoComponent\r\n            },\r\n            {\r\n                path: 'editar/aluno/:id',\r\n                component: CadastroAlunoComponent\r\n            },\r\n            {\r\n                path: 'lista/aluno',\r\n                component: ListaAlunoComponent\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [ \r\n        RouterModule.forRoot(routes, { useHash: true, relativeLinkResolution: 'legacy' } ) \r\n    ],\r\n    exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule{\r\n    \r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AppMsgErroModule } from '../compartilhado/componentes/app-msg-erro/app-msg-erro.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RequestInterceptor } from './auth/request.interceptor';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        LoginComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        AppMsgErroModule,\r\n        FormsModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    providers: [\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: RequestInterceptor,\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\nexport class CoreModule{\r\n\r\n}","\r\nimport { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-msg-erro',\r\n    templateUrl: './app-msg-erro.component.html'\r\n})\r\nexport class AppMsgErroComponent{\r\n\r\n    @Input() mensagem: string = ''\r\n    \r\n}","<div class=\"text-danger d-block mt-2\">\r\n    {{ mensagem }}\r\n </div>","import { Injectable } from \"@angular/core\";\r\nimport { HttpInterceptor } from \"@angular/common/http\";\r\nimport { HttpRequest } from \"@angular/common/http\";\r\nimport { HttpHandler } from \"@angular/common/http\";\r\nimport { Observable, throwError as observableThrowError } from \"rxjs\";\r\nimport { HttpSentEvent } from \"@angular/common/http\";\r\nimport { HttpHeaderResponse } from \"@angular/common/http\";\r\nimport { HttpProgressEvent } from \"@angular/common/http\";\r\nimport { HttpResponse } from \"@angular/common/http\";\r\nimport { HttpUserEvent } from \"@angular/common/http\";\r\nimport { environment } from '../../../environments/environment';\r\nimport { Router } from '@angular/router';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { TokenService } from \"../token/token.service\";\r\nimport { UserService } from '../user/user.service';\r\n\r\nconst API = environment.apiUrl;\r\n\r\n@Injectable()\r\nexport class RequestInterceptor implements HttpInterceptor {\r\n    \r\n    constructor(\r\n        private tokenService: TokenService,\r\n        private userService: UserService,\r\n        private router: Router\r\n    ) {}\r\n\r\n    // intercepta cada requisição feita web para a api, verifica o token, clona e envia para a api\r\n    \r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpSentEvent \r\n        | HttpHeaderResponse | HttpProgressEvent | HttpResponse<any> | HttpUserEvent<any>> {\r\n            \r\n            if (req.url == `${API}login`) {\r\n                return next.handle(req);\r\n            }\r\n       \r\n            if(this.tokenService.hasToken()) {\r\n                const token = this.tokenService.getToken();\r\n                req = req.clone({\r\n                    setHeaders: {\r\n                        'x-access-token': token\r\n                    }\r\n                });\r\n            }\r\n            return next.handle(req)\r\n                .pipe(\r\n                    catchError(err => {\r\n                        if(err.status === 401){\r\n                            console.log('entrou');\r\n                            this.userService.logout();\r\n                            this.router.navigate(['login']);\r\n                            alert('Sua sessão expirou');\r\n                            return observableThrowError(err);\r\n                        }\r\n                    })\r\n                )\r\n            ;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport * as jtw_decode from 'jwt-decode';\r\n\r\nimport { User } from './user';\r\nimport { TokenService } from '../token/token.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class UserService{\r\n\r\n    user: User;\r\n\r\n    // assim que inicia o serviço, verifica se existe o token e faz a decodificação\r\n    constructor(private tokenService: TokenService){\r\n        this.tokenService.hasToken() &&\r\n        this.decodeAndNotify();\r\n    }\r\n\r\n    setToken(token: string){\r\n        this.tokenService.setToken(token);\r\n        this.decodeAndNotify();\r\n    }\r\n\r\n    getUser(){\r\n        return this.user;\r\n    }\r\n\r\n    private decodeAndNotify(){\r\n        const token = this.tokenService.getToken();\r\n        this.user = jtw_decode(token) as User;\r\n    }\r\n\r\n    logout(){\r\n        this.tokenService.removeToken();\r\n        this.user = null;\r\n    }\r\n\r\n    isLogged(){\r\n        return this.tokenService.hasToken();\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { UserService } from '../user/user.service';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root'})\r\nexport class LoginGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private router: Router) {}\r\n\r\n    /* Guarda de rotas utilizada para retornar para a página inicial, caso o usuário já estiver logado */\r\n\r\n    canActivate(\r\n        route: ActivatedRouteSnapshot, \r\n        state: RouterStateSnapshot): boolean | Observable<boolean> | Promise<boolean> {\r\n            \r\n            if(this.userService.isLogged()){\r\n                this.router.navigate(['home'])\r\n                return false;\r\n            }\r\n            return true;\r\n    }\r\n}","// IMPORT ALL MATERIAL COMPONENTS\r\n// #STEPS\r\n// 1- Import this file as module in app.module.ts ==> import { MaterialModule } from './xyz/abc';\r\n// 2- Initialize it in imports:[] array ==> imports:[MaterialModule]\r\n\r\nimport { NgModule } from '@angular/core';\r\n// *************** FORM CONTROLS ***************\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport{MatNativeDateModule} from '@angular/material/core'             //FROM ANGULAR CORE\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\n\r\n// *************** NAVIGATION ***************\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\n\r\n// *************** LAYOUT ***************\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\n// *************** BUTTONS & INDICATORS ***************\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatRippleModule} from '@angular/material/core';\r\n\r\n// *************** POPUPS & MODALS ***************\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\n\r\n// *************** DATA TABLE ***************\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\n\r\n\r\nconst AllMaterialModules=[\r\n  MatAutocompleteModule,\r\n  MatCheckboxModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatMenuModule,\r\n  MatSidenavModule,\r\n  MatToolbarModule,\r\n  MatCardModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatListModule,\r\n  MatStepperModule,\r\n  MatTabsModule,\r\n  MatTreeModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatBadgeModule,\r\n  MatChipsModule,\r\n  MatIconModule,\r\n  MatProgressSpinnerModule,\r\n  MatProgressBarModule,\r\n  MatRippleModule,\r\n  MatBottomSheetModule,\r\n  MatDialogModule,\r\n  MatSnackBarModule,\r\n  MatTooltipModule,\r\n  MatPaginatorModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n];\r\n\r\n@NgModule({\r\n  imports: [AllMaterialModules],\r\n  exports: [AllMaterialModules],\r\n})\r\nexport class MaterialModule {}","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}