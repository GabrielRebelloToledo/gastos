{"version":3,"sources":["webpack:///src/app/core/login/login.component.ts","webpack:///src/app/core/login/login.component.html","webpack:///src/app/aluno/lista-aluno/lista-aluno.component.ts","webpack:///src/app/aluno/lista-aluno/lista-aluno.component.html","webpack:///src/app/aluno/cadastro-aluno/cadastro-aluno.component.ts","webpack:///src/app/aluno/cadastro-aluno/cadastro-aluno.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/core/auth/auth.guard.ts","webpack:///src/app/aluno/aluno.service.ts","webpack:///src/app/aluno/aluno.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/core/auth/auth.service.ts","webpack:///src/app/core/token/token.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.module.ts","webpack:///src/app/compartilhado/componentes/app-msg-erro/app-msg-erro.module.ts","webpack:///src/app/app.routing.module.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/compartilhado/componentes/app-msg-erro/app-msg-erro.component.ts","webpack:///src/app/compartilhado/componentes/app-msg-erro/app-msg-erro.component.html","webpack:///src/app/core/auth/request.interceptor.ts","webpack:///src/app/core/user/user.service.ts","webpack:///src/app/core/auth/login.guard.ts","webpack:///src/app/compartilhado/componentes/material/material.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["LoginComponent","formBuilder","authService","router","loginError","loginForm","group","login","required","password","get","value","authenticate","subscribe","navigate","err","console","log","templateUrl","ListaAlunoComponent","AlunoService","ListaAlunos","pesquisaTodos","alunoForm","pesquisarTodos","getAll","result","id","window","confirm","alert","location","reload","selector","styleUrls","CadastroAlunoComponent","route","listaUsuarios","params","pipe","getById","aluno","editarForm","id_user","nome","curso","patchValue","atualizarAluno","getRawValue","update","success","reset","error","novoAluno","create","submit","HomeComponent","environment","production","apiUrl","AuthGuard","userService","state","isLogged","queryParams","fromUrl","url","providedIn","API","http","post","put","AlunoModule","declarations","imports","exports","AppComponent","title","AuthService","usuario","senha","observe","res","authToken","headers","setToken","KEY","TokenService","getToken","token","localStorage","setItem","getItem","removeItem","AppModule","providers","bootstrap","HomeModule","AppMsgErroModule","routes","path","pathMatch","redirectTo","component","canActivate","children","AppRoutingModule","forRoot","useHash","relativeLinkResolution","CoreModule","provide","useClass","multi","AppMsgErroComponent","mensagem","RequestInterceptor","tokenService","req","next","handle","hasToken","clone","setHeaders","status","logout","UserService","decodeAndNotify","user","removeToken","LoginGuard","AllMaterialModules","MaterialModule","bootstrapModule","webpackEmptyAsyncContext","Promise","resolve","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent{\r\n    \r\n    loginForm: FormGroup; //diretiva para controle do formulário\r\n    @Input() loginError: boolean = false;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private authService: AuthService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.loginForm = this.formBuilder.group({  \r\n        login: ['', Validators.required],\r\n        password: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    login(){\r\n        const login = this.loginForm.get('login').value;\r\n        const password = this.loginForm.get('password').value;\r\n\r\n        this.authService\r\n        .authenticate(login, password)\r\n        .subscribe(\r\n            () => this.router.navigate(['home']), //informe a rota que irá abrir após o login \r\n            err => {\r\n            console.log(err);\r\n            this.loginError = true;\r\n            }\r\n        );\r\n    }\r\n}","<form #form=\"ngForm\" [formGroup]=\"loginForm\" (submit)=\"login()\" class=\"form-signin\">\r\n    <h1>Acesso ao sistema</h1>\r\n    <div class=\"form-group\">\r\n        <input formControlName=\"login\" type=\"text\" placeholder=\"Usuário\" class=\"form-control\">\r\n        <app-msg-erro mensagem=\"O usuário é obrigatório!\" *ngIf=\"loginForm.get('login').errors?.required && \r\n            (form.submitted || loginForm.get('login').touched)\">\r\n        </app-msg-erro>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <input formControlName=\"password\" type=\"password\" placeholder=\"Senha\" class=\"form-control\">\r\n        <app-msg-erro mensagem=\"A senha é obrigatória!\" *ngIf=\"loginForm.get('password').errors?.required && \r\n            (form.submitted || loginForm.get('password').touched)\">\r\n        </app-msg-erro>\r\n    </div>\r\n\r\n    <button type=\"submit\" class=\"btn btn-primary\">Entrar</button>\r\n\r\n    <app-msg-erro mensagem=\"Usuário ou senha inválidos!\" *ngIf=\"loginError\"></app-msg-erro>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Aluno } from '../aluno';\r\nimport { AlunoService } from '../aluno.service'\r\n\r\n@Component({\r\n  selector: 'app-lista-aluno',\r\n  templateUrl: './lista-aluno.component.html',\r\n  styleUrls: ['./lista-aluno.component.css']\r\n})\r\nexport class ListaAlunoComponent implements OnInit {\r\n\r\n  ListaAlunos: Aluno[] = [];\r\n  alunoForm: FormGroup\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private AlunoService: AlunoService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.pesquisaTodos();\r\n\r\n    this.alunoForm = this.formBuilder.group({\r\n      pesquisarTodos: ['']\r\n    })\r\n  }\r\n\r\n  pesquisaTodos() {\r\n    this.AlunoService.getAll().subscribe(result => { this.ListaAlunos = result })\r\n  }\r\n\r\n  editarAluno(id) {\r\n    this.router.navigate(['/home/editar/aluno', id])\r\n  }\r\n\r\n  deletarAluno(id) {\r\n\r\n    if (window.confirm('Tem certeza que deseja excluir este aluno?')) {\r\n      this.AlunoService.delete(id).subscribe(result => { this.ListaAlunos = result; })\r\n      alert('Aluno excluído.')\r\n      window.location.reload();\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"alunoForm\">\r\n    \r\n    <div class=\"container text-center\">\r\n        <table class=\"table table-hover\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Nome</th>\r\n                    <th scope=\"col\">Curso</th>\r\n                    <th scope=\"col\">Opções</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let aluno of ListaAlunos\">\r\n                    <td>{{aluno.nome}}</td>\r\n                    <td>{{aluno.curso}}</td>\r\n                    <td>\r\n                        <button class=\"btn btn-outline-primary ml-2\" (click)=\"editarAluno(aluno.id)\">Editar</button>\r\n                        <button class=\"btn btn-outline-danger ml-2\" (click)=\"deletarAluno(aluno.id)\">Excluir</button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { Location } from '@angular/common';\r\nimport { Aluno } from '../aluno';\r\n\r\nimport { AlunoService } from '../aluno.service'\r\nimport { UserService } from 'src/app/core/user/user.service';\r\n\r\n@Component({\r\n  selector: 'app-cadastro-aluno',\r\n  templateUrl: './cadastro-aluno.component.html',\r\n  styleUrls: ['./cadastro-aluno.component.css']\r\n})\r\nexport class CadastroAlunoComponent implements OnInit {\r\n\r\n  alunoForm: FormGroup;\r\n  \r\n  constructor(\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private listaUsuarios: UserService,\r\n    private AlunoService: AlunoService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n   \r\n\r\n    this.route.params\r\n      .pipe(\r\n        map((params: any) => params['id']),\r\n        switchMap(id => this.AlunoService.getById(id))\r\n      )\r\n      .subscribe(aluno => this.editarForm(aluno)\r\n      );\r\n\r\n    this.alunoForm = this.formBuilder.group({\r\n      id: [null],\r\n      id_user: ['', Validators.required],\r\n      nome: ['', Validators.required],\r\n      curso: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  editarForm(aluno: Aluno) {\r\n\r\n    this.alunoForm.patchValue(\r\n      {\r\n        id: aluno[0].id,\r\n        nome: aluno[0].nome,\r\n        curso: aluno[0].curso\r\n      }\r\n    )\r\n  }\r\n\r\n  preencheCampos(aluno: Aluno) {\r\n    this.alunoForm.patchValue(\r\n      {\r\n        nome: aluno.nome,\r\n        curso: aluno.curso\r\n      });\r\n\r\n  }\r\n\r\n  submit() {\r\n    if (this.alunoForm.value.id) {\r\n      const atualizarAluno = this.alunoForm.getRawValue() as Aluno;\r\n      this.AlunoService.update(atualizarAluno).subscribe(\r\n        success => {\r\n          alert('Aluno atualizado!')\r\n          this.alunoForm.reset()\r\n\r\n        },\r\n        error => {\r\n          alert('Erro ao atualizar.')\r\n        }\r\n      )\r\n    } else {\r\n      const novoAluno = this.alunoForm.getRawValue() as Aluno;\r\n      this.AlunoService.create(novoAluno).subscribe(\r\n        success => {\r\n          alert('Aluno salvo!')\r\n          this.alunoForm.reset()\r\n        },\r\n        error => {\r\n          alert('Erro ao salvar.')\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <form [formGroup]=\"alunoForm\" (submit)=\"submit()\">\r\n\r\n        <div class=\"row mb-5\">\r\n            <div class=\"col-lg-4 input-group\">\r\n                <div class=\"input-group-prepend\">\r\n                    <span class=\"input-group-text\">Nome</span>\r\n                </div>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"nome\" aria-label=\"Default\"\r\n                    aria-describedby=\"inputGroup-sizing-default\">\r\n            </div>\r\n\r\n            <div class=\"col-lg-4 input-group\">\r\n                <div class=\"input-group-prepend\">\r\n                    <span class=\"input-group-text\">Curso</span>\r\n                </div>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"curso\" aria-label=\"Default\"\r\n                    aria-describedby=\"inputGroup-sizing-default\">\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"form-group buttons text-center\">\r\n            <button class=\"btn btn-success\" type=\"submit\">Enviar</button>\r\n            <button class=\"btn btn-primary ml-2\" [routerLink]=\"'/home'\">Voltar</button>\r\n        </div>\r\n\r\n\r\n    </form>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    templateUrl: './home.component.html'\r\n})\r\nexport class HomeComponent{}","<router-outlet></router-outlet>\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: true,\r\n  apiUrl: 'http://localhost:3000/api/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { UserService } from '../user/user.service';\r\n\r\n@Injectable({ providedIn: 'root'})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private router: Router) {}\r\n\r\n    /* Guarda de rotas para ser utilizada nas rotas \r\n       que não devem ser acessadas se o usuário não estiver logado*/\r\n       \r\n    canActivate(\r\n        route: ActivatedRouteSnapshot, \r\n        state: RouterStateSnapshot): boolean | Observable<boolean> | Promise<boolean> {\r\n            if(!this.userService.isLogged()){\r\n                this.router.navigate(\r\n                    ['login'],\r\n                    {\r\n                        queryParams: {\r\n                            fromUrl: state.url\r\n                        }\r\n                    }\r\n                );\r\n                return false;\r\n            }\r\n            return true;\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { EMPTY, Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Aluno } from './aluno';\r\n\r\nconst API = environment.apiUrl;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlunoService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n\r\n  getAll(): Observable<Aluno[]> {\r\n    return this.http.get<Aluno[]>(`${API}aluno`);\r\n  }\r\n\r\n  create(aluno: Aluno) {\r\n    return this.http.post(`${API}aluno`, aluno).pipe(take(1));\r\n  }\r\n\r\n  getById(id) {\r\n    if (!id) return EMPTY;\r\n    return this.http.get<Aluno>(`${API}aluno/${id}`);\r\n  }\r\n\r\n  update(update) {\r\n    console.log(update)\r\n    return this.http.put(`${API}aluno/${update.id}`, update).pipe(take(1));\r\n  }\r\n\r\n  delete(id) {\r\n    return this.http.delete<Aluno[]>(`${API}aluno/${id}`);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { CadastroAlunoComponent } from './cadastro-aluno/cadastro-aluno.component';\r\nimport { ListaAlunoComponent } from './lista-aluno/lista-aluno.component';\r\nimport { AppRoutingModule } from '../app.routing.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CadastroAlunoComponent, \r\n    ListaAlunoComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    BrowserModule,\r\n    AppRoutingModule\r\n  ],\r\n  exports: [\r\n    CadastroAlunoComponent, \r\n    ListaAlunoComponent\r\n  ]\r\n})\r\nexport class AlunoModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'modelo-app';\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { UserService } from '../user/user.service';\r\n\r\nconst API = environment.apiUrl;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService{\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private userService: UserService\r\n      ) { }\r\n    \r\n      authenticate(usuario: string, senha: string){\r\n        return this.http\r\n          .post(API + 'logon', {\"usuario\":usuario, \"senha\":senha}, { observe: 'response'}) //coloque a rota de login da sua api\r\n          .pipe(tap(res => {\r\n            const authToken = res.headers.get('x-access-token');\r\n            this.userService.setToken(authToken);\r\n            console.log(`Usuário ${usuario} autenticado com o token ${authToken}`);\r\n          })\r\n        );\r\n      }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n// informe a key que será salvo no localhost\r\nconst KEY = 'authTokenmodeloapp';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class TokenService{\r\n    hasToken(){\r\n        return !!this.getToken(); //!! é utilizado para converter valores em booleanos\r\n    }\r\n\r\n    setToken(token){\r\n        window.localStorage.setItem(KEY, token);\r\n    }\r\n\r\n    getToken(){\r\n        return window.localStorage.getItem(KEY);\r\n    }\r\n\r\n    removeToken(){\r\n        return window.localStorage.removeItem(KEY);\r\n    }\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { CoreModule } from './core/core.module';\r\nimport { AppRoutingModule } from './app.routing.module';\r\nimport { HomeModule } from './home/home.module';\r\nimport { MaterialModule } from './compartilhado/componentes/material/material.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AlunoModule } from './aluno/aluno.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CoreModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    HomeModule,\r\n    AlunoModule\r\n\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { HomeComponent } from './home.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        HomeComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule\r\n    ]\r\n})\r\nexport class HomeModule{\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AppMsgErroComponent } from './app-msg-erro.component';\r\n\r\n@NgModule({\r\n    declarations: [AppMsgErroComponent],\r\n    imports: [CommonModule],\r\n    exports: [AppMsgErroComponent]\r\n})\r\nexport class AppMsgErroModule{}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './core/login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginGuard } from './core/auth/login.guard';\r\nimport { AuthGuard } from './core/auth/auth.guard';\r\nimport { CadastroAlunoComponent } from './aluno/cadastro-aluno/cadastro-aluno.component';\r\nimport { ListaAlunoComponent } from './aluno/lista-aluno/lista-aluno.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        pathMatch: 'full',\r\n        redirectTo: 'login',\r\n    },\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n        canActivate: [LoginGuard]\r\n    },\r\n    {\r\n        path: 'home',\r\n        component: HomeComponent,\r\n        canActivate: [AuthGuard],\r\n        children: [\r\n            {\r\n                path: 'cadastrar/aluno',\r\n                component: CadastroAlunoComponent\r\n            },\r\n            {\r\n                path: 'editar/aluno/:id',\r\n                component: CadastroAlunoComponent\r\n            },\r\n            {\r\n                path: 'lista/aluno',\r\n                component: ListaAlunoComponent\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [ \r\n        RouterModule.forRoot(routes, { useHash: true, relativeLinkResolution: 'legacy' } ) \r\n    ],\r\n    exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule{\r\n    \r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AppMsgErroModule } from '../compartilhado/componentes/app-msg-erro/app-msg-erro.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RequestInterceptor } from './auth/request.interceptor';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        LoginComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        AppMsgErroModule,\r\n        FormsModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    providers: [\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: RequestInterceptor,\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\nexport class CoreModule{\r\n\r\n}","\r\nimport { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-msg-erro',\r\n    templateUrl: './app-msg-erro.component.html'\r\n})\r\nexport class AppMsgErroComponent{\r\n\r\n    @Input() mensagem: string = ''\r\n    \r\n}","<div class=\"text-danger d-block mt-2\">\r\n    {{ mensagem }}\r\n </div>","import { Injectable } from \"@angular/core\";\r\nimport { HttpInterceptor } from \"@angular/common/http\";\r\nimport { HttpRequest } from \"@angular/common/http\";\r\nimport { HttpHandler } from \"@angular/common/http\";\r\nimport { Observable, throwError as observableThrowError } from \"rxjs\";\r\nimport { HttpSentEvent } from \"@angular/common/http\";\r\nimport { HttpHeaderResponse } from \"@angular/common/http\";\r\nimport { HttpProgressEvent } from \"@angular/common/http\";\r\nimport { HttpResponse } from \"@angular/common/http\";\r\nimport { HttpUserEvent } from \"@angular/common/http\";\r\nimport { environment } from '../../../environments/environment';\r\nimport { Router } from '@angular/router';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { TokenService } from \"../token/token.service\";\r\nimport { UserService } from '../user/user.service';\r\n\r\nconst API = environment.apiUrl;\r\n\r\n@Injectable()\r\nexport class RequestInterceptor implements HttpInterceptor {\r\n    \r\n    constructor(\r\n        private tokenService: TokenService,\r\n        private userService: UserService,\r\n        private router: Router\r\n    ) {}\r\n\r\n    // intercepta cada requisição feita web para a api, verifica o token, clona e envia para a api\r\n    \r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpSentEvent \r\n        | HttpHeaderResponse | HttpProgressEvent | HttpResponse<any> | HttpUserEvent<any>> {\r\n            \r\n            if (req.url == `${API}login`) {\r\n                return next.handle(req);\r\n            }\r\n       \r\n            if(this.tokenService.hasToken()) {\r\n                const token = this.tokenService.getToken();\r\n                req = req.clone({\r\n                    setHeaders: {\r\n                        'x-access-token': token\r\n                    }\r\n                });\r\n            }\r\n            return next.handle(req)\r\n                .pipe(\r\n                    catchError(err => {\r\n                        if(err.status === 401){\r\n                            console.log('entrou');\r\n                            this.userService.logout();\r\n                            this.router.navigate(['login']);\r\n                            alert('Sua sessão expirou');\r\n                            return observableThrowError(err);\r\n                        }\r\n                    })\r\n                )\r\n            ;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport * as jtw_decode from 'jwt-decode';\r\n\r\nimport { User } from './user';\r\nimport { TokenService } from '../token/token.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class UserService{\r\n\r\n    user: User;\r\n\r\n    // assim que inicia o serviço, verifica se existe o token e faz a decodificação\r\n    constructor(private tokenService: TokenService){\r\n        this.tokenService.hasToken() &&\r\n        this.decodeAndNotify();\r\n    }\r\n\r\n    setToken(token: string){\r\n        this.tokenService.setToken(token);\r\n        this.decodeAndNotify();\r\n    }\r\n\r\n    getUser(){\r\n        return this.user;\r\n    }\r\n\r\n    private decodeAndNotify(){\r\n        const token = this.tokenService.getToken();\r\n        this.user = jtw_decode(token) as User;\r\n    }\r\n\r\n    logout(){\r\n        this.tokenService.removeToken();\r\n        this.user = null;\r\n    }\r\n\r\n    isLogged(){\r\n        return this.tokenService.hasToken();\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { UserService } from '../user/user.service';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root'})\r\nexport class LoginGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private router: Router) {}\r\n\r\n    /* Guarda de rotas utilizada para retornar para a página inicial, caso o usuário já estiver logado */\r\n\r\n    canActivate(\r\n        route: ActivatedRouteSnapshot, \r\n        state: RouterStateSnapshot): boolean | Observable<boolean> | Promise<boolean> {\r\n            \r\n            if(this.userService.isLogged()){\r\n                this.router.navigate(['home'])\r\n                return false;\r\n            }\r\n            return true;\r\n    }\r\n}","// IMPORT ALL MATERIAL COMPONENTS\r\n// #STEPS\r\n// 1- Import this file as module in app.module.ts ==> import { MaterialModule } from './xyz/abc';\r\n// 2- Initialize it in imports:[] array ==> imports:[MaterialModule]\r\n\r\nimport { NgModule } from '@angular/core';\r\n// *************** FORM CONTROLS ***************\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport{MatNativeDateModule} from '@angular/material/core'             //FROM ANGULAR CORE\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\n\r\n// *************** NAVIGATION ***************\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\n\r\n// *************** LAYOUT ***************\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\n// *************** BUTTONS & INDICATORS ***************\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatRippleModule} from '@angular/material/core';\r\n\r\n// *************** POPUPS & MODALS ***************\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\n\r\n// *************** DATA TABLE ***************\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\n\r\n\r\nconst AllMaterialModules=[\r\n  MatAutocompleteModule,\r\n  MatCheckboxModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatMenuModule,\r\n  MatSidenavModule,\r\n  MatToolbarModule,\r\n  MatCardModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatListModule,\r\n  MatStepperModule,\r\n  MatTabsModule,\r\n  MatTreeModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatBadgeModule,\r\n  MatChipsModule,\r\n  MatIconModule,\r\n  MatProgressSpinnerModule,\r\n  MatProgressBarModule,\r\n  MatRippleModule,\r\n  MatBottomSheetModule,\r\n  MatDialogModule,\r\n  MatSnackBarModule,\r\n  MatTooltipModule,\r\n  MatPaginatorModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n];\r\n\r\n@NgModule({\r\n  imports: [AllMaterialModules],\r\n  exports: [AllMaterialModules],\r\n})\r\nexport class MaterialModule {}","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}